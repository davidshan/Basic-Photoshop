#BlueJ class context
comment0.target=Processor
comment0.text=\r\n\ Processor\ manipulates\ Java\ BufferedImages,\ which\ are\ effectively\ 2d\ arrays\r\n\ of\ pixels.\ Each\ pixel\ is\ a\ single\ integer\ packed\ with\ 4\ values\ inside\ it.\r\n\ The\ user\ can\ provide\ a\ BufferedImage\ for\ the\ methods,\ and\ it\ will\ make\ changes\ to\r\n\ the\ BufferedImage\ according\ to\ the\ method's\ function.\ This\ class\ does\ not\ need\ to\r\n\ be\ instantiated,\ nor\ is\ it\ a\ child\ of\ Greenfoot.Actor\ or\ Greenfoot.World.\r\n\ \r\n\ <p>Example\ of\ using\ Processor\:\ greyScale\ method\ on\ a\ BufferedImage\ turns\ it\ grey.\r\n\r\n\ @author\ David\ Shan\r\n\ @version\ November\ 2014\r\n
comment1.params=bi
comment1.target=void\ blueify(java.awt.image.BufferedImage)
comment1.text=\r\n\ Example\ colour\ altering\ method\ by\ Mr.\ Cohen.\ This\ method\ will\r\n\ increase\ the\ blue\ value\ while\ reducing\ the\ red\ and\ green\ values.\r\n\ \r\n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\r\n\ \r\n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\r\n
comment10.params=bi
comment10.target=void\ cool(java.awt.image.BufferedImage)
comment10.text=\r\n\ Applies\ a\ colour-cooling\ effect\ on\ a\ provided\ BufferedImage\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ affected\r\n
comment11.params=bi
comment11.target=java.awt.image.BufferedImage\ rotateCW(java.awt.image.BufferedImage)
comment11.text=\r\n\ Method\ that\ takes\ a\ BufferedImage\ and\ rotates\ it\ 90\ degrees\ clockwise\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ rotated\r\n\ @return\ \ Returns\ a\ new\ BufferedImage\ that\ is\ the\ input\ BufferedImage\ rotated\ 90\ degrees\ CW\r\n
comment12.params=bi
comment12.target=java.awt.image.BufferedImage\ rotateCCW(java.awt.image.BufferedImage)
comment12.text=\r\n\ Method\ that\ takes\ a\ BufferedImage\ and\ rotates\ it\ 90\ degrees\ counter-clockwise\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ rotated\r\n\ @return\ \ Returns\ a\ new\ BufferedImage\ that\ is\ the\ input\ BufferedImage\ rotated\ 90\ degrees\ CCW\r\n
comment13.params=bi
comment13.target=void\ gaussianBlur(java.awt.image.BufferedImage)
comment13.text=\r\n\ Applies\ a\ Gaussian\ Blur\ onto\ a\ provided\ BufferedImage\r\n\r\n\ source\:\ http\://www.jhlabs.com/ip/blurring.html\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ manipulated\r\n
comment14.params=bi
comment14.target=void\ emboss(java.awt.image.BufferedImage)
comment14.text=\r\n\ Applies\ an\ embossing\ effect\ on\ a\ provided\ BufferedImage\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ manipulated\r\n
comment15.params=bi
comment15.target=void\ edgeDetect(java.awt.image.BufferedImage)
comment15.text=\r\n\ Detects\ the\ edges\ of\ a\ BufferedImage\ and\ emphasizes\ it\r\n\ <p>\ http\://blancosilva.wordpress.com/teaching/mathematical-imaging/edge-detection-the-convolution-approach/\r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ manipulated\r\n
comment16.params=bi
comment16.target=void\ addImage(java.awt.image.BufferedImage)
comment16.text=\r\n\ Adds\ a\ copy\ of\ a\ provided\ BufferedImage\ to\ the\ ArrayList\ of\ BufferedImage\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ added\ into\ the\ ArrayList\r\n
comment17.params=bi
comment17.target=java.awt.image.BufferedImage\ undo(java.awt.image.BufferedImage)
comment17.text=\r\n\ Returns\ the\ last\ image\ in\ the\ BufferedImage\ ArrayList,\ and\ removes\ it\ from\ the\ ArrayList.\r\n\ User\ needs\ to\ provide\ a\ BufferedImage\ (particularly\ the\ one\ that\ is\ being\ manipulated\ on\ the\ screen)\r\n\ \r\n\ @param\ \ \ bi\ \ The\ current\ BufferedImage\r\n\ @return\ \ Returns\ the\ last\ BufferedImage\ in\ the\ ArrayList\ (or\ if\ none\ are\ available,\ returns\ bi)\r\n
comment18.params=bi
comment18.target=java.awt.image.BufferedImage\ copy(java.awt.image.BufferedImage)
comment18.text=\r\n\ Copies\ a\ provided\ BufferedImage,\ and\ returns\ it\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ copied\r\n
comment19.params=
comment19.target=void\ clearImageList()
comment19.text=\r\n\ Clears\ the\ BufferedImage\ ArrayList\ used\ for\ the\ undo\ function\r\n\ when\ for\ example\ the\ user\ opens\ a\ new\ picture\r\n
comment2.params=bi
comment2.target=void\ flipHorizontal(java.awt.image.BufferedImage)
comment2.text=\r\n\ Horizontally\ flips\ a\ BufferedImage\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ flipped\r\n
comment20.params=bi
comment20.target=java.awt.image.BufferedImage\ removeAlpha(java.awt.image.BufferedImage)
comment20.text=\r\n\ Sets\ the\ alpha\ value\ of\ the\ pixels\ of\ a\ provided\ BufferedImage\ to\ 0\r\n\ \r\n\ @param\ \ \ bi\ \ BufferedImage\ to\ have\ it's\ alpha\ value\ set\ to\ 0\r\n\ @return\ \ The\ provided\ BufferedImage\ with\ alpha\ value\ of\ 0\r\n
comment21.params=rgbaValue
comment21.target=int[]\ unpackPixel(int)
comment21.text=\r\n\ Takes\ in\ an\ rgb\ value\ -\ the\ kind\ that\ is\ returned\ from\ BufferedImage's\r\n\ getRGB()\ method\ -\ and\ returns\ 4\ integers\ for\ easy\ manipulation.\r\n\ \r\n\ By\ Jordan\ Cohen\r\n\ Version\ 0.2\r\n\ \r\n\ @param\ rgbaValue\ The\ value\ of\ a\ single\ pixel\ as\ an\ integer,\ representing<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 8\ bits\ for\ red,\ green\ and\ blue\ and\ 8\ bits\ for\ alpha\:<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>00000000000000000000000000000000</pre>\r\n\ @return\ int[4]\ \ \ Array\ containing\ 4\ shorter\ ints<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>0\ \ \ \ \ \ \ 1\ \ \ \ \ \ \ 2\ \ \ \ \ \ \ 3</pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\r\n
comment22.params=r\ g\ b\ a
comment22.target=int\ packagePixel(int,\ int,\ int,\ int)
comment22.text=\r\n\ Takes\ in\ a\ red,\ green,\ blue\ and\ alpha\ integer\ and\ uses\ bit-shifting\r\n\ to\ package\ all\ of\ the\ data\ into\ a\ single\ integer.\r\n\ \r\n\ @param\ \ \ int\ red\ value\ (0-255)\r\n\ @param\ \ \ int\ green\ value\ (0-255)\r\n\ @param\ \ \ int\ blue\ value\ (0-255)\r\n\ @param\ \ \ int\ alpha\ value\ (0-255)\r\n\ \r\n\ @return\ int\ \ Integer\ representing\ 32\ bit\ integer\ pixel\ ready\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ BufferedImage\r\n
comment3.params=bi
comment3.target=void\ flipVertical(java.awt.image.BufferedImage)
comment3.text=\r\n\ Method\ that\ vertically\ flips\ a\ BufferedImage\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ flipped\r\n
comment4.params=bi
comment4.target=void\ greyScale(java.awt.image.BufferedImage)
comment4.text=\r\n\ Method\ that\ takes\ a\ BufferedImage\ and\ has\ the\ Grey-Scaling\ effect\ applied\ on\ it\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ grey-scaled\r\n
comment5.params=bi
comment5.target=void\ sepia(java.awt.image.BufferedImage)
comment5.text=\r\n\ Method\ that\ takes\ a\ BufferedImage\ and\ has\ the\ sepia\ colour-effect\ applied\ on\ it\r\n\ \r\n\ Taken\ from\ <b>http\://stackoverflow.com/questions/5132015/how-to-convert-image-to-sepia-in-java\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ manipulated\r\n\ \r\n
comment6.params=bi
comment6.target=void\ turnToNegative(java.awt.image.BufferedImage)
comment6.text=\r\n\ Method\ that\ takes\ a\ BufferedImage\ and\ turns\ it's\ RGB\ values\ into\ it's\ negatives\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ manipulated\ with\r\n
comment7.params=bi
comment7.target=void\ brighten(java.awt.image.BufferedImage)
comment7.text=\r\n\ Increases\ the\ brightness\ of\ a\ provided\ BufferedImage\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ brightened\r\n
comment8.params=bi
comment8.target=void\ darken(java.awt.image.BufferedImage)
comment8.text=\r\n\ Decreases\ the\ brightness\ of\ a\ provided\ BufferedImage\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ darkened\r\n
comment9.params=bi
comment9.target=void\ warm(java.awt.image.BufferedImage)
comment9.text=\r\n\ Applies\ a\ warm-colour\ effect\ on\ a\ provided\ BufferedImage\r\n\ \r\n\ @param\ \ \ bi\ \ The\ BufferedImage\ to\ be\ affected\r\n
numComments=23
